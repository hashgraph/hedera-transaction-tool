name: Test Frontend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

defaults:
  run:
    shell: bash

permissions:
  contents: read

concurrency:
  group: pr-checks-${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build | Front-end
    runs-on: transaction-tools-linux-medium

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: 22.12.0
          cache: 'npm'
          cache-dependency-path: |
            front-end/pnpm-lock.yaml

      - name: Install pnpm
        run: npm install -g pnpm@9.15.3

      - name: Install front-end Dependencies
        run: pnpm install --frozen-lockfile
        working-directory: front-end

      - name: Build Linux executable
        run: pnpm run build:linux
        working-directory: front-end

      - name: Cache Build Artifacts
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: front-end/release/linux-unpacked
          key: build-artifacts-${{ github.sha }}

  test:
    name: Automation | ${{ matrix.test-suite.name }}
    runs-on: transaction-tools-linux-medium
    needs: build
    strategy:
      fail-fast: false
      matrix:
        test-suite:
          - name: Registration
            command: RegistrationTests
          - name: Login
            command: LoginTests
          - name: Settings
            command: SettingsTests
          - name: Transactions
            command: TransactionTests
          - name: Workflow
            command: WorkflowTests
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: 22.12.0
          cache: 'npm'
          cache-dependency-path: |
            automation/pnpm-lock.yaml

      - name: Install pnpm
        run: npm install -g pnpm@9.15.3

      - name: Install Docker Compose Plugin
        run: |
          sudo curl -fLo /usr/local/lib/docker/cli-plugins/docker-compose https://github.com/docker/compose/releases/download/v2.29.1/docker-compose-linux-x86_64
          sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose

      - name: Install Automation Dependencies
        run: pnpm install --frozen-lockfile
        working-directory: automation

      - name: Setup Kind
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        with:
          install_only: true
          node_image: kindest/node:v1.31.4@sha256:2cb39f7295fe7eafee0842b1052a599a4fb0f8bcf3f83d96c7f4864c357c6c30
          version: v0.26.0
          kubectl_version: v1.31.4
          verbosity: 3
          wait: 120s

      - name: Install Solo CLI
        run: |
          set -euo pipefail
          npm install -g @hashgraph/solo
          solo --version
          kind --version

      - name: Deploy Solo
        id: solo_deploy
        env:
          SOLO_CLUSTER_NAME: solo
          SOLO_NAMESPACE: solo
          SOLO_CLUSTER_SETUP_NAMESPACE: solo-cluster
          SOLO_DEPLOYMENT: solo-deployment
        run: |
          set -euo pipefail
          kind create cluster -n "${SOLO_CLUSTER_NAME}"
          solo one-shot single deploy | tee solo-deploy.log

      - name: Check port forwarding
        run: |
          ps -ef | grep port-forward
          env
          curl -fsS http://localhost:8080/api/v1/network/nodes
          curl -fsS http://localhost:8081/api/v1/network/nodes

      - name: Restore Build Artifacts
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          fail-on-cache-miss: true
          path: front-end/release/linux-unpacked
          key: build-artifacts-${{ github.sha }}

      - name: Install xvfb
        run: sudo apt-get update && sudo apt-get install -y xvfb

      - name: Install Runtime Shared Libraries
        run: sudo apt-get install --no-install-recommends -y xorg openbox libnss3 libasound2 libatk-adaptor libgtk-3-0

      - name: Run Automation
        env:
          EXECUTABLE_PATH: ../front-end/release/linux-unpacked/hedera-transaction-tool
          PRIVATE_KEY: ${{ secrets.SOLO_PRIVATE_KEY }}
          OPERATOR_KEY: ${{ secrets.OPERATOR_KEY }}
          ENVIRONMENT: LOCALNET

        run: xvfb-run -a npx playwright test tests/${{ matrix.test-suite.command }}
        working-directory: automation

  unit-test:
    name: Unit Tests | ${{ matrix.test-suite.name }}
    runs-on: transaction-tools-linux-medium
    strategy:
      fail-fast: false
      matrix:
        test-suite:
          - name: Main Process
            command: main
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: 22.12.0
          cache: 'npm'
          cache-dependency-path: |
            front-end/pnpm-lock.yaml

      - name: Install pnpm
        run: npm install -g pnpm@9.15.3

      - name: Install front-end Dependencies
        run: pnpm install --frozen-lockfile
        working-directory: front-end

      - name: Run Unit Tests
        run: pnpm run test:${{ matrix.test-suite.command }}:coverage
        working-directory: front-end

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@5c47607acb93fed5485fdbf7232e8a31425f672a # v5.0.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
