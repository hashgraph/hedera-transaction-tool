name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: pr-checks-${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build front-end
    runs-on: ubuntu-latest

    steps:
      # - name: Install dependencies
      #   run: sudo apt-get install -y build-essential python3.10
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: |
            front-end/package-lock.json
            automation/package-lock.json

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      # - name: Install pnpm
      #   run: npm i -g pnpm node-gyp

      # - name: prep hedera
      #   uses: actions/checkout@v4
      #   with:
      #     repository: hashgraph/hedera-local-node
      #     path: hedera-local-node
      # - name: run hedera
      #   run: |
      #     npm i
      #     npm run start -- -d
      #   working-directory: hedera-local-node

      - name: Install front-end dependencies
        run: npm ci
        working-directory: front-end

      # - name: list npm packages
      #   run: |
      #     npm ls
      #   working-directory: front-end

      # - name: Install protobuf
      #   run: pnpm install @hashgraph/proto
      #   working-directory: front-end

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      # - name: Build
      #   run: npm run build
      #   working-directory: front-end

      - name: Build Linux executable
        run: npm run build:linux
        working-directory: front-end

      - name: Cache Build Artifacts
        uses: actions/cache@v4.0.2
        with:
          path: front-end/release/linux-unpacked
          key: build-artifacts-${{ github.sha }}
  test:
    name: ${{ matrix.test-suite }}
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        test-suite:
          - RegistrationTests
          - LoginTests
          - SettingsTests
          - TransactionTests
          - WorkflowTests
    steps:
      # - name: Copy example.env files
      #   run: find apps -type f -name "example.env" -print -exec sh -c 'cp "$1" "$(dirname "$1")/.env"' _ {} \;
      #   working-directory: back-end

      - name: Install automation dependencies
        run: npm ci
        working-directory: automation

      # - name: run back-end
      #   run: docker compose up -d
      #   working-directory: back-end
      - name: run hedera local
        run: npx @hashgraph/hedera-local start -d

      - name: Restore Build Artifacts
        uses: actions/cache@v4.0.2
        with:
          fail-on-cache-miss: true
          path: front-end/release/linux-unpacked
          key: build-artifacts-${{ github.sha }}

      - name: run automation
        env:
          EXECUTABLE_PATH: ../front-end/release/linux-unpacked/hedera-transaction-tool
          PRIVATE_KEY: "0x9a07bbdbb62e24686d2a4259dc88e38438e2c7a1ba167b147ad30ac540b0a3cd"
          ENVIRONMENT: LOCALNET

        run: xvfb-run -a npx playwright test tests/${{ matrix.test-suite }}
        working-directory: automation

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
