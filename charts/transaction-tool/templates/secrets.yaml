{{- if and .Values.rabbitmq.createSecrets (not (lookup "v1" "Secret" .Release.Namespace .Values.rabbitmq.cluster.config.secretBackend.externalSecret.name)) }}
{{- $randomPassword := randAlphaNum 16 }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ dig "cluster" "config" "secretBackend" "externalSecret" "name" .Values.rabbitmq.secretName .Values.rabbitmq }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
  labels: {{ include "common.labels" . | nindent 4 }}
type: Opaque
stringData:
  default_user.conf: |
    default_user = development
    default_pass = {{ $randomPassword }}
  host: {{ .Values.rabbitmq.endpoint }}
  username: development
  password: {{ $randomPassword }}
  port: "5672"
  provider: rabbitmq
  type: rabbitmq
{{- else }}
# Secret already exists, skipping creation
{{- end }}

{{- if and .Values.postgres.createSecrets (not (lookup "v1" "Secret" .Release.Namespace (printf "postgres-%s" .Release.Namespace))) }}
{{- $randomUserPassword := randAlphaNum 16 | b64enc }}
{{- $randomSuperUserPassword := randAlphaNum 16 | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Namespace }}-db-user
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
  labels: {{ include "common.labels" . | nindent 4 }}
type: kubernetes.io/basic-auth
data:
  username: ZGV2ZWxvcG1lbnQ=
  password: {{ $randomUserPassword }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Namespace }}-db-superuser
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
    {{ include "common.annotations" . | nindent 4 }}
type: kubernetes.io/basic-auth
data:
  username: cG9zdGdyZXM=
  password: {{ $randomSuperUserPassword }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "postgres-%s" .Release.Namespace }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
    {{ include "common.annotations" . | nindent 4 }}
  labels: {{ include "common.labels" . | nindent 4 }}
type: kubernetes.io/basic-auth
data:
  database: {{ .Values.postgres.cluster.config.bootstrap.initdb.database | b64enc }}
  username: ZGV2ZWxvcG1lbnQ=
  password: {{ $randomUserPassword }}
{{- else }}
# Secret already exists, skipping creation
{{- end }}

{{- if and .Values.jwt.createSecrets (not (lookup "v1" "Secret" .Release.Namespace .Values.jwt.secretName)) }}
{{- $randomJWTKey := randAlphaNum 16 | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.jwt.secretName }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
    {{ include "common.annotations" . | nindent 4 }}
  labels: {{ include "common.labels" . | nindent 4 }}
type: Opaque
data:
  jwt_key: {{ $randomJWTKey }}
{{- end }}

{{- if and .Values.otp.createSecrets (not (lookup "v1" "Secret" .Release.Namespace .Values.otp.secretName)) }}
{{- $randomOTPKey := randAlphaNum 16 | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.otp.secretName }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
    {{ include "common.annotations" . | nindent 4 }}
  labels: {{ include "common.labels" . | nindent 4 }}
type: Opaque
data:
  otp_key: {{ $randomOTPKey }}
{{- end }}
