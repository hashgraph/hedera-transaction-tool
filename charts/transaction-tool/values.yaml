# @param nameOverride overrides the name of the chart.
nameOverride: ""
# @param fullnameOverride overrides the full name of the chart.
fullnameOverride: ""

global:
  labels: {}
  annotations: {}

rabbitmq:
  # @param rabbitmq.enabled set to true if you want to self-host on your k8s cluster.
  enabled: true
  # @param rabbitmq.createSecrets required only if you are self-hosting RabbitMQ in your cluster AND you don't want to create your own secret object.
  createSecrets: true
  # @param rabbitmq.secretName. Required only if you are NOT self-hosting in your cluster i.e. managed service.
  secretName: ""
  # @param rabbitmq.endpoint matches the service name of the RabbitMQ cluster created by @param rabbitmqCluster.name.<namespace>.svc
  # Change if you are using managed RabbitMQ.
  endpoint: ""
  port: 5672
  cluster:
    # Official RabbitMQ configuration starts here: https://www.rabbitmq.com/kubernetes/operator/using-operator#configure
    config:
      replicas: 1
      resources:
        requests:
          cpu: '1'
          memory: 2Gi
        limits:
          cpu: '2'
          memory: 3Gi
      rabbitmq:
        additionalConfig: |
          cluster_partition_handling = pause_minority
          disk_free_limit.relative = 1.0
          collect_statistics_interval = 10000
      persistence:
        # storageClassName: rabbitmq
        storage: "1Gi"
      secretBackend:
        externalSecret:
          # @param rabbitmq.config.cluster.secretBackend.externalSecret.name must be set if you are self-hosting in your cluster i.e. @param rabbitmq.enabled is true.
          name: rabbitmq-development
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - development-rmq
            topologyKey: kubernetes.io/hostname
      override:
        statefulSet:
          spec:
            template:
              spec:
                containers: []
                topologySpreadConstraints:
                - maxSkew: 1
                  topologyKey: "topology.kubernetes.io/zone"
                  whenUnsatisfiable: ScheduleAnyway
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: development-rmq

postgres:
  # @param postgres.enabled set to true if you want to self-host on your k8s cluster.
  enabled: true
  # @param postgres.createSecrets required only if @param postgres.enabled is true.
  createSecrets: true
  # @param postgres.secretName must be set if you are NOT self-hosting in your cluster i.e. @param postgres.enabled is false.
  secretName: ""
  host: ""
  port: 5432
  cluster:
    # Official ProstgreSQL configuration starts here: https://cloudnative-pg.io/documentation/1.24/
    config:
      instances: 1
      storage:
        size: 1Gi
      bootstrap:
        initdb:
          database: development
          owner: development
          secret:
            name: development-db-user
      enableSuperuserAccess: true
      superuserSecret:
        name: development-db-superuser

redis:
  # @param redis.enabled set to true if you want to self-host on your k8s cluster.
  enabled: true
  # param redis.url required only if @param redis.enabled is false. If set, it must be of the form redis://<endpoint>.
  url: ""

# JWT configuration
jwt:
  createSecrets: true
  secretName: jwt-development

# OTP configuration
otp:
  createSecrets: true
  secretName: otp-development

# Email API configuration
emailApi:
  # @param emailApi.secretName must be provided. These cannot be created.
  # The following fields are required in the secret object:
  #  host
  #  port
  #  username
  #  password
  #  sender-email
  #  secure (boolean)
  secretName: email-api-development

# Brevo configuration
brevo:
  # @param brevo.secretName must be provided. These cannot be created.
  # The following fields are required in the secret object:
  #  username
  #  password
  secretName: brevo-development

# API service configuration
api:
  replicas: 1
  image: gcr.io/transaction-tool-dev/api
  resources:
    requests:
      memory: "200Mi"
      cpu: "50m"
    limits:
      memory: "250Mi"
      cpu: "250m"
  env:
    HTTP_PORT: "3000"
    TCP_PORT: "3001"
    POSTGRES_SYNCHRONIZE: "true"
    POSTGRES_MAX_POOL_SIZE: "3"
    JWT_EXPIRATION: "365"
    OTP_EXPIRATION: "20"
    ANONYMOUS_MINUTE_LIMIT: "3"
    ANONYMOUS_FIVE_SECOND_LIMIT: "1"
    GLOBAL_MINUTE_LIMIT: "10000"
    GLOBAL_SECOND_LIMIT: "1000"
    NODE_ENV: "production"
  service:
    httpPort: 3000
    targetPort: 3000
    ingress:
      annotations: {}

# Auth service configuration
auth:
  service:
    port: 3001
    targetPort: 3001

# Notifications service configuration
notifications:
  replicas: 1
  image: gcr.io/transaction-tool-dev/notifications
  resources:
    requests:
      memory: "200Mi"
      cpu: "50m"
    limits:
      memory: "250Mi"
      cpu: "250m"
  env:
    POSTGRES_SYNCHRONIZE: "true"
    POSTGRES_MAX_POOL_SIZE: "3"
  service:
    httpPort: 3020
    targetPort: 3020
    ingress:
      annotations:
        traefik.ingress.kubernetes.io/service.sticky.cookie: "true"
        traefik.ingress.kubernetes.io/service.sticky.cookie.name: "transaction-tool-notifications-development"
        traefik.ingress.kubernetes.io/service.sticky.cookie.secure: "true"
        traefik.ingress.kubernetes.io/service.passhostheader: "true"

# Chain service configuration
chain:
  replicas: 1
  image: gcr.io/transaction-tool-dev/chain
  resources:
    requests:
      memory: "200Mi"
      cpu: "50m"
    limits:
      memory: "250Mi"
      cpu: "250m"
  env:
    POSTGRES_SYNCHRONIZE: "true"
    POSTGRES_MAX_POOL_SIZE: "3"

traefik:
  # @param traefik.enabled set to true if you want to self-host on your k8s cluster and you don't already have traefik installed.
  enabled: true
  # Official Traefik configuration starts here
  providers:
    kubernetesIngress:
      publishedService:
        enabled: true
      namespaces:
        - "development"
  ingressClass:
    enabled: true
    isDefaultClass: false
    name: "development"

# Ingress object configuration.
ingress:
  className: development
  host: development-transaction-tool.swirldslabs-devops.com
