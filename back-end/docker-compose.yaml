services:
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      target: development
    command: npm run start:dev api
    env_file:
      - ./apps/api/.env
    ports:
      - '3001:3000'
    volumes:
      - .:/usr/src/app
  chain:
    build:
      context: .
      dockerfile: ./apps/chain/Dockerfile
      target: development
    command: npm run start:dev chain
    env_file:
      - ./apps/chain/.env
    volumes:
      - .:/usr/src/app
  notifications:
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    command: npm run start:dev notifications
    env_file:
      - ./apps/notifications/.env
    ports:
      - '3020:3020'
    volumes:
      - .:/usr/src/app
  rabbitmq:
    image: rabbitmq
    ports:
      - 5672:5672
  database:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD
    container_name: postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    # for development, allow postgres to be accessible
    ports:
      - '5432:5432'
  #    expose:
  #      - '5432'
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: nest-pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    ports:
      - '5050:80'
    depends_on:
      - database
  redis:
    image: redis
    container_name: cache
    ports:
      - 6380:6379
    volumes:
      - redis:/data
volumes:
  redis:
    driver: local
